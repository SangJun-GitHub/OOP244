1.	Does the Hero class need to know about the existence of the SuperHero class? (Hint: do a search in Hero.cpp, does the word “SuperHero” appear anywhere?) 
No, because Hero class is super class to SuperHero class, Super class does not need sub class.

2.	Does the SuperHero class need to know about the existence of the Hero class? (Hint: do a search in SuperHero.cpp, does the word “Hero” appear anywhere?)
yes, because SuperHero class is sub class to Hero class , Sub class need super class.

3.	The program prints out “Ancient Battle!” when 2 Heroes fight. It prints out “Super Fight!” when 2 SuperHeroes fight. When you tried to make a Hero fight a SuperHero, what did it print out?
“Ancient Battle!”

4.	True or False: are the following definitions for main valid? 
int main() {
  Hero("Achilles", 20, 6) * Hero("Hector", 30, 5);
}
True
how about this?

int main() {
 (Hero("Achilles", 20, 6) * Hero("Hector", 30, 5)) 
                          *
 (Hero("Atalanta", 10, 3) * Hero("Hippolyta", 10, 2));
}
True

Quiz 6 Reflection
Explain what inheritace is, one of the main characteristics of OOP.
A class inherite date member from other class. data member does not contain special function.

Descrobe in English (no code!) a situation where it makes sence to use inheritance in your code. Use an example(be specific)
for example, every persons have a name. Seneca students have ID number and cources.
in this case, person class contain names date. So, person class is super class of student class.

Explain the C++ keyword protected (where do we use it and what does it do?)
when we use inheritance, we should write limits. Which are private, protected, and public.
If we use protected, we can not access function in main(), but sub class access that.

Quiz 8 Reflection
In C++, how do we prohibit copies and copy-assigning instances of a class?
write "= delete" after copy assignment and copy constructor in header file.

In C++, what is an abstract  class? How can one be created? Your ansers must capture the characteristics of an abstract class and decribe how to create one (do not write code!)
An abstract class is a class that contains or inherits a pure virtual function. The definition of any abstract base class contains or inherits at least one pure virtual member function.

Explain the concept of late binding (or dynamic dispatch) in C++.
when we use early binding, the compiler chooses the most efficient function at compile time. So, using dynamic dispatch, compiler postpone calling a function at run-time. when the executable code distinguish the dynamic type of object, so program chooses to call the most suitable function with the dynamic type of object.